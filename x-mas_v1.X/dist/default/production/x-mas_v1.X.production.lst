

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Wed Dec 20 22:07:19 2017

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    19                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    25                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    26                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    27  0000                     
    28                           ; Version 1.44
    29                           ; Generated 14/09/2017 GMT
    30                           ; 
    31                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC18F4520 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     
    63                           	psect	idataCOMRAM
    64  0003B6                     __pidataCOMRAM:
    65                           	opt stack 0
    66                           
    67                           ;initializer for _TAIL
    68  0003B6  FF                 	db	low (_data+255)
    69  0003B7  01                 	db	high (_data+255)
    70                           
    71                           ;initializer for _now
    72  0003B8  08                 	db	low (_data+8)
    73  0003B9  01                 	db	high (_data+8)
    74                           
    75                           	psect	idataBANK1
    76  000012                     __pidataBANK1:
    77                           	opt stack 0
    78                           
    79                           ;initializer for _data
    80  000012  01                 	db	1
    81  000013  02                 	db	2
    82  000014  04                 	db	4
    83  000015  08                 	db	8
    84  000016  10                 	db	16
    85  000017  22                 	db	34
    86  000018  40                 	db	64
    87  000019  80                 	db	128
    88  00001A  00                 	db	0
    89  00001B  00                 	db	0
    90  00001C  00                 	db	0
    91  00001D  00                 	db	0
    92  00001E  00                 	db	0
    93  00001F  00                 	db	0
    94  000020  00                 	db	0
    95  000021  00                 	db	0
    96  000022  00                 	db	0
    97  000023  00                 	db	0
    98  000024  00                 	db	0
    99  000025  00                 	db	0
   100  000026  00                 	db	0
   101  000027  00                 	db	0
   102  000028  00                 	db	0
   103  000029  00                 	db	0
   104  00002A  00                 	db	0
   105  00002B  00                 	db	0
   106  00002C  00                 	db	0
   107  00002D  00                 	db	0
   108  00002E  00                 	db	0
   109  00002F  00                 	db	0
   110  000030  00                 	db	0
   111  000031  00                 	db	0
   112  000032  00                 	db	0
   113  000033  00                 	db	0
   114  000034  00                 	db	0
   115  000035  00                 	db	0
   116  000036  00                 	db	0
   117  000037  00                 	db	0
   118  000038  00                 	db	0
   119  000039  00                 	db	0
   120  00003A  00                 	db	0
   121  00003B  00                 	db	0
   122  00003C  00                 	db	0
   123  00003D  00                 	db	0
   124  00003E  00                 	db	0
   125  00003F  00                 	db	0
   126  000040  00                 	db	0
   127  000041  00                 	db	0
   128  000042  00                 	db	0
   129  000043  00                 	db	0
   130  000044  00                 	db	0
   131  000045  00                 	db	0
   132  000046  00                 	db	0
   133  000047  00                 	db	0
   134  000048  00                 	db	0
   135  000049  00                 	db	0
   136  00004A  00                 	db	0
   137  00004B  00                 	db	0
   138  00004C  00                 	db	0
   139  00004D  00                 	db	0
   140  00004E  00                 	db	0
   141  00004F  00                 	db	0
   142  000050  00                 	db	0
   143  000051  00                 	db	0
   144  000052  00                 	db	0
   145  000053  00                 	db	0
   146  000054  00                 	db	0
   147  000055  00                 	db	0
   148  000056  00                 	db	0
   149  000057  00                 	db	0
   150  000058  00                 	db	0
   151  000059  00                 	db	0
   152  00005A  00                 	db	0
   153  00005B  00                 	db	0
   154  00005C  00                 	db	0
   155  00005D  00                 	db	0
   156  00005E  00                 	db	0
   157  00005F  00                 	db	0
   158  000060  00                 	db	0
   159  000061  00                 	db	0
   160  000062  00                 	db	0
   161  000063  00                 	db	0
   162  000064  00                 	db	0
   163  000065  00                 	db	0
   164  000066  00                 	db	0
   165  000067  00                 	db	0
   166  000068  00                 	db	0
   167  000069  00                 	db	0
   168  00006A  00                 	db	0
   169  00006B  00                 	db	0
   170  00006C  00                 	db	0
   171  00006D  00                 	db	0
   172  00006E  00                 	db	0
   173  00006F  00                 	db	0
   174  000070  00                 	db	0
   175  000071  00                 	db	0
   176  000072  00                 	db	0
   177  000073  00                 	db	0
   178  000074  00                 	db	0
   179  000075  00                 	db	0
   180  000076  00                 	db	0
   181  000077  00                 	db	0
   182  000078  00                 	db	0
   183  000079  00                 	db	0
   184  00007A  00                 	db	0
   185  00007B  00                 	db	0
   186  00007C  00                 	db	0
   187  00007D  00                 	db	0
   188  00007E  00                 	db	0
   189  00007F  00                 	db	0
   190  000080  00                 	db	0
   191  000081  00                 	db	0
   192  000082  00                 	db	0
   193  000083  00                 	db	0
   194  000084  00                 	db	0
   195  000085  00                 	db	0
   196  000086  00                 	db	0
   197  000087  00                 	db	0
   198  000088  00                 	db	0
   199  000089  00                 	db	0
   200  00008A  00                 	db	0
   201  00008B  00                 	db	0
   202  00008C  00                 	db	0
   203  00008D  00                 	db	0
   204  00008E  00                 	db	0
   205  00008F  00                 	db	0
   206  000090  00                 	db	0
   207  000091  00                 	db	0
   208  000092  00                 	db	0
   209  000093  00                 	db	0
   210  000094  00                 	db	0
   211  000095  00                 	db	0
   212  000096  00                 	db	0
   213  000097  00                 	db	0
   214  000098  00                 	db	0
   215  000099  00                 	db	0
   216  00009A  00                 	db	0
   217  00009B  00                 	db	0
   218  00009C  00                 	db	0
   219  00009D  00                 	db	0
   220  00009E  00                 	db	0
   221  00009F  00                 	db	0
   222  0000A0  00                 	db	0
   223  0000A1  00                 	db	0
   224  0000A2  00                 	db	0
   225  0000A3  00                 	db	0
   226  0000A4  00                 	db	0
   227  0000A5  00                 	db	0
   228  0000A6  00                 	db	0
   229  0000A7  00                 	db	0
   230  0000A8  00                 	db	0
   231  0000A9  00                 	db	0
   232  0000AA  00                 	db	0
   233  0000AB  00                 	db	0
   234  0000AC  00                 	db	0
   235  0000AD  00                 	db	0
   236  0000AE  00                 	db	0
   237  0000AF  00                 	db	0
   238  0000B0  00                 	db	0
   239  0000B1  00                 	db	0
   240  0000B2  00                 	db	0
   241  0000B3  00                 	db	0
   242  0000B4  00                 	db	0
   243  0000B5  00                 	db	0
   244  0000B6  00                 	db	0
   245  0000B7  00                 	db	0
   246  0000B8  00                 	db	0
   247  0000B9  00                 	db	0
   248  0000BA  00                 	db	0
   249  0000BB  00                 	db	0
   250  0000BC  00                 	db	0
   251  0000BD  00                 	db	0
   252  0000BE  00                 	db	0
   253  0000BF  00                 	db	0
   254  0000C0  00                 	db	0
   255  0000C1  00                 	db	0
   256  0000C2  00                 	db	0
   257  0000C3  00                 	db	0
   258  0000C4  00                 	db	0
   259  0000C5  00                 	db	0
   260  0000C6  00                 	db	0
   261  0000C7  00                 	db	0
   262  0000C8  00                 	db	0
   263  0000C9  00                 	db	0
   264  0000CA  00                 	db	0
   265  0000CB  00                 	db	0
   266  0000CC  00                 	db	0
   267  0000CD  00                 	db	0
   268  0000CE  00                 	db	0
   269  0000CF  00                 	db	0
   270  0000D0  00                 	db	0
   271  0000D1  00                 	db	0
   272  0000D2  00                 	db	0
   273  0000D3  00                 	db	0
   274  0000D4  00                 	db	0
   275  0000D5  00                 	db	0
   276  0000D6  00                 	db	0
   277  0000D7  00                 	db	0
   278  0000D8  00                 	db	0
   279  0000D9  00                 	db	0
   280  0000DA  00                 	db	0
   281  0000DB  00                 	db	0
   282  0000DC  00                 	db	0
   283  0000DD  00                 	db	0
   284  0000DE  00                 	db	0
   285  0000DF  00                 	db	0
   286  0000E0  00                 	db	0
   287  0000E1  00                 	db	0
   288  0000E2  00                 	db	0
   289  0000E3  00                 	db	0
   290  0000E4  00                 	db	0
   291  0000E5  00                 	db	0
   292  0000E6  00                 	db	0
   293  0000E7  00                 	db	0
   294  0000E8  00                 	db	0
   295  0000E9  00                 	db	0
   296  0000EA  00                 	db	0
   297  0000EB  00                 	db	0
   298  0000EC  00                 	db	0
   299  0000ED  00                 	db	0
   300  0000EE  00                 	db	0
   301  0000EF  00                 	db	0
   302  0000F0  00                 	db	0
   303  0000F1  00                 	db	0
   304  0000F2  00                 	db	0
   305  0000F3  00                 	db	0
   306  0000F4  00                 	db	0
   307  0000F5  00                 	db	0
   308  0000F6  00                 	db	0
   309  0000F7  00                 	db	0
   310  0000F8  00                 	db	0
   311  0000F9  00                 	db	0
   312  0000FA  00                 	db	0
   313  0000FB  00                 	db	0
   314  0000FC  00                 	db	0
   315  0000FD  00                 	db	0
   316  0000FE  00                 	db	0
   317  0000FF  00                 	db	0
   318  000100  00                 	db	0
   319  000101  00                 	db	0
   320  000102  00                 	db	0
   321  000103  00                 	db	0
   322  000104  00                 	db	0
   323  000105  00                 	db	0
   324  000106  00                 	db	0
   325  000107  00                 	db	0
   326  000108  00                 	db	0
   327  000109  00                 	db	0
   328  00010A  00                 	db	0
   329  00010B  00                 	db	0
   330  00010C  00                 	db	0
   331  00010D  00                 	db	0
   332  00010E  00                 	db	0
   333  00010F  00                 	db	0
   334  000110  00                 	db	0
   335  000111  00                 	db	0
   336  0000                     _IPR1bits	set	3999
   337  0000                     _PIE1bits	set	3997
   338  0000                     _PIR1bits	set	3998
   339  0000                     _RCSTAbits	set	4011
   340  0000                     _SPBRG	set	4015
   341  0000                     _TXSTAbits	set	4012
   342  0000                     _BAUDCONbits	set	4024
   343  0000                     _TRISCbits	set	3988
   344  0000                     _TXREG	set	4013
   345  0000                     _RCREG	set	4014
   346  0000                     _INTCONbits	set	4082
   347  0000                     _RCONbits	set	4048
   348  0000                     _LATA	set	3977
   349  0000                     _TRISA	set	3986
   350  0000                     _TRISD	set	3989
   351  0000                     _OSCCONbits	set	4051
   352  0000                     _RCIF	set	31989
   353                           
   354                           ; #config settings
   355  0000                     
   356                           	psect	cinit
   357  00024A                     __pcinit:
   358                           	opt stack 0
   359  00024A                     start_initialization:
   360                           	opt stack 0
   361  00024A                     __initialization:
   362                           	opt stack 0
   363                           
   364                           ; Initialize objects allocated to BANK1 (256 bytes)
   365                           ; load TBLPTR registers with __pidataBANK1
   366  00024A  0E12               	movlw	low __pidataBANK1
   367  00024C  6EF6               	movwf	tblptrl,c
   368  00024E  0E00               	movlw	high __pidataBANK1
   369  000250  6EF7               	movwf	tblptrh,c
   370  000252  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   371  000254  6EF8               	movwf	tblptru,c
   372  000256  EE01  F000         	lfsr	0,__pdataBANK1
   373  00025A  EE11 F000          	lfsr	1,256
   374  00025E                     copy_data0:
   375  00025E  0009               	tblrd		*+
   376  000260  CFF5 FFEE          	movff	tablat,postinc0
   377  000264  50E5               	movf	postdec1,w,c
   378  000266  50E1               	movf	fsr1l,w,c
   379  000268  E1FA               	bnz	copy_data0
   380  00026A  50E2               	movf	fsr1h,w,c
   381  00026C  E1F8               	bnz	copy_data0
   382                           
   383                           ; Initialize objects allocated to COMRAM (4 bytes)
   384                           ; load TBLPTR registers with __pidataCOMRAM
   385  00026E  0EB6               	movlw	low __pidataCOMRAM
   386  000270  6EF6               	movwf	tblptrl,c
   387  000272  0E03               	movlw	high __pidataCOMRAM
   388  000274  6EF7               	movwf	tblptrh,c
   389  000276  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   390  000278  6EF8               	movwf	tblptru,c
   391  00027A  EE00  F02A         	lfsr	0,__pdataCOMRAM
   392  00027E  EE10 F004          	lfsr	1,4
   393  000282                     copy_data1:
   394  000282  0009               	tblrd		*+
   395  000284  CFF5 FFEE          	movff	tablat,postinc0
   396  000288  50E5               	movf	postdec1,w,c
   397  00028A  50E1               	movf	fsr1l,w,c
   398  00028C  E1FA               	bnz	copy_data1
   399                           
   400                           ; Clear objects allocated to COMRAM (4 bytes)
   401  00028E  6A29               	clrf	(__pbssCOMRAM+3)& (0+255),c
   402  000290  6A28               	clrf	(__pbssCOMRAM+2)& (0+255),c
   403  000292  6A27               	clrf	(__pbssCOMRAM+1)& (0+255),c
   404  000294  6A26               	clrf	__pbssCOMRAM& (0+255),c
   405  000296                     end_of_initialization:
   406                           	opt stack 0
   407  000296                     __end_of__initialization:
   408                           	opt stack 0
   409  000296  902E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   410  000298  922E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   411  00029A  0100               	movlb	0
   412  00029C  EF50  F001         	goto	_main	;jump to C main() function
   413                           tblptru	equ	0xFF8
   414                           tblptrh	equ	0xFF7
   415                           tblptrl	equ	0xFF6
   416                           tablat	equ	0xFF5
   417                           postinc0	equ	0xFEE
   418                           postdec1	equ	0xFE5
   419                           fsr1h	equ	0xFE2
   420                           fsr1l	equ	0xFE1
   421                           
   422                           	psect	bssCOMRAM
   423  000026                     __pbssCOMRAM:
   424                           	opt stack 0
   425  000026                     _stringC:
   426                           	opt stack 0
   427  000026                     	ds	2
   428  000028                     _global_char:
   429                           	opt stack 0
   430  000028                     	ds	1
   431  000029                     _temp:
   432                           	opt stack 0
   433  000029                     	ds	1
   434                           tblptru	equ	0xFF8
   435                           tblptrh	equ	0xFF7
   436                           tblptrl	equ	0xFF6
   437                           tablat	equ	0xFF5
   438                           postinc0	equ	0xFEE
   439                           postdec1	equ	0xFE5
   440                           fsr1h	equ	0xFE2
   441                           fsr1l	equ	0xFE1
   442                           
   443                           	psect	dataCOMRAM
   444  00002A                     __pdataCOMRAM:
   445                           	opt stack 0
   446  00002A                     _TAIL:
   447                           	opt stack 0
   448  00002A                     	ds	2
   449  00002C                     _now:
   450                           	opt stack 0
   451  00002C                     	ds	2
   452                           tblptru	equ	0xFF8
   453                           tblptrh	equ	0xFF7
   454                           tblptrl	equ	0xFF6
   455                           tablat	equ	0xFF5
   456                           postinc0	equ	0xFEE
   457                           postdec1	equ	0xFE5
   458                           fsr1h	equ	0xFE2
   459                           fsr1l	equ	0xFE1
   460                           
   461                           	psect	dataBANK1
   462  000100                     __pdataBANK1:
   463                           	opt stack 0
   464  000100                     _data:
   465                           	opt stack 0
   466  000100                     	ds	256
   467                           tblptru	equ	0xFF8
   468                           tblptrh	equ	0xFF7
   469                           tblptrl	equ	0xFF6
   470                           tablat	equ	0xFF5
   471                           postinc0	equ	0xFEE
   472                           postdec1	equ	0xFE5
   473                           fsr1h	equ	0xFE2
   474                           fsr1l	equ	0xFE1
   475                           
   476                           	psect	cstackCOMRAM
   477  000001                     __pcstackCOMRAM:
   478                           	opt stack 0
   479  000001                     ?i2_next:
   480                           	opt stack 0
   481  000001                     Myusartwrite@a:
   482                           	opt stack 0
   483  000001                     i2next@ptr:
   484                           	opt stack 0
   485                           
   486                           ; 2 bytes @ 0x0
   487  000001                     	ds	2
   488  000003                     add_word@c:
   489                           	opt stack 0
   490                           
   491                           ; 1 bytes @ 0x2
   492  000003                     	ds	1
   493  000004                     ??_Hi_ISR:
   494                           
   495                           ; 1 bytes @ 0x3
   496  000004                     	ds	18
   497  000016                     ?_next:
   498                           	opt stack 0
   499  000016                     ?_prev:
   500                           	opt stack 0
   501  000016                     prev@ptr:
   502                           	opt stack 0
   503  000016                     next@ptr:
   504                           	opt stack 0
   505                           
   506                           ; 2 bytes @ 0x15
   507  000016                     	ds	2
   508  000018                     LED_DISP@start:
   509                           	opt stack 0
   510                           
   511                           ; 2 bytes @ 0x17
   512  000018                     	ds	2
   513  00001A                     LED_DISP@bright:
   514                           	opt stack 0
   515                           
   516                           ; 2 bytes @ 0x19
   517  00001A                     	ds	2
   518  00001C                     LED_DISP@dark:
   519                           	opt stack 0
   520                           
   521                           ; 2 bytes @ 0x1B
   522  00001C                     	ds	2
   523  00001E                     LED_DISP@delay:
   524                           	opt stack 0
   525                           
   526                           ; 2 bytes @ 0x1D
   527  00001E                     	ds	2
   528  000020                     LED_DISP@iter:
   529                           	opt stack 0
   530                           
   531                           ; 2 bytes @ 0x1F
   532  000020                     	ds	2
   533  000022                     LED_DISP@i:
   534                           	opt stack 0
   535                           
   536                           ; 2 bytes @ 0x21
   537  000022                     	ds	2
   538  000024                     main@start:
   539                           	opt stack 0
   540                           
   541                           ; 2 bytes @ 0x23
   542  000024                     	ds	2
   543                           tblptru	equ	0xFF8
   544                           tblptrh	equ	0xFF7
   545                           tblptrl	equ	0xFF6
   546                           tablat	equ	0xFF5
   547                           postinc0	equ	0xFEE
   548                           postdec1	equ	0xFE5
   549                           fsr1h	equ	0xFE2
   550                           fsr1l	equ	0xFE1
   551                           
   552 ;;
   553 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   554 ;;
   555 ;; *************** function _main *****************
   556 ;; Defined at:
   557 ;;		line 109 in file "main.c"
   558 ;; Parameters:    Size  Location     Type
   559 ;;		None
   560 ;; Auto vars:     Size  Location     Type
   561 ;;  start           2   35[COMRAM] PTR unsigned char 
   562 ;;		 -> data(256), 
   563 ;; Return value:  Size  Location     Type
   564 ;;                  1    wreg      void 
   565 ;; Registers used:
   566 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   567 ;; Tracked objects:
   568 ;;		On entry : 0/0
   569 ;;		On exit  : 0/0
   570 ;;		Unchanged: 0/0
   571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   572 ;;      Params:         0       0       0       0       0       0       0
   573 ;;      Locals:         2       0       0       0       0       0       0
   574 ;;      Temps:          0       0       0       0       0       0       0
   575 ;;      Totals:         2       0       0       0       0       0       0
   576 ;;Total ram usage:        2 bytes
   577 ;; Hardware stack levels required when called:    6
   578 ;; This function calls:
   579 ;;		_ISR_Init
   580 ;;		_LED_DISP
   581 ;;		_Myusartinit
   582 ;;		_next
   583 ;; This function is called by:
   584 ;;		Startup code after reset
   585 ;; This function uses a non-reentrant model
   586 ;;
   587                           
   588                           	psect	text0
   589  0002A0                     __ptext0:
   590                           	opt stack 0
   591  0002A0                     _main:
   592                           	opt stack 25
   593                           
   594                           ;main.c: 110: OSCCONbits.IRCF = 0b110;
   595                           
   596                           ;incstack = 0
   597  0002A0  50D3               	movf	4051,w,c	;volatile
   598  0002A2  0B8F               	andlw	-113
   599  0002A4  0960               	iorlw	96
   600  0002A6  6ED3               	movwf	4051,c	;volatile
   601                           
   602                           ;main.c: 111: TRISD = 0;
   603  0002A8  0E00               	movlw	0
   604  0002AA  6E95               	movwf	3989,c	;volatile
   605                           
   606                           ;main.c: 112: TRISA = 0;
   607  0002AC  0E00               	movlw	0
   608  0002AE  6E92               	movwf	3986,c	;volatile
   609                           
   610                           ;main.c: 113: Myusartinit();
   611  0002B0  ECBC  F001         	call	_Myusartinit	;wreg free
   612                           
   613                           ;main.c: 114: ISR_Init();
   614  0002B4  ECD3  F001         	call	_ISR_Init	;wreg free
   615                           
   616                           ;main.c: 116: char* start = (char*)data;
   617  0002B8  0E00               	movlw	low _data
   618  0002BA  6E24               	movwf	main@start,c
   619  0002BC  0E01               	movlw	high _data
   620  0002BE  6E25               	movwf	main@start+1,c
   621  0002C0                     l61:
   622                           
   623                           ;main.c: 118: start = next(start);
   624  0002C0  C024  F016         	movff	main@start,next@ptr
   625  0002C4  C025  F017         	movff	main@start+1,next@ptr+1
   626  0002C8  EC71  F001         	call	_next	;wreg free
   627  0002CC  C016  F024         	movff	?_next,main@start
   628  0002D0  C017  F025         	movff	?_next+1,main@start+1
   629                           
   630                           ;main.c: 119: LED_DISP(start);
   631  0002D4  C024  F018         	movff	main@start,LED_DISP@start
   632  0002D8  C025  F019         	movff	main@start+1,LED_DISP@start+1
   633  0002DC  ECDB  F000         	call	_LED_DISP	;wreg free
   634  0002E0  D7EF               	goto	l61
   635  0002E2                     __end_of_main:
   636                           	opt stack 0
   637                           tblptru	equ	0xFF8
   638                           tblptrh	equ	0xFF7
   639                           tblptrl	equ	0xFF6
   640                           tablat	equ	0xFF5
   641                           postinc0	equ	0xFEE
   642                           postdec1	equ	0xFE5
   643                           fsr1h	equ	0xFE2
   644                           fsr1l	equ	0xFE1
   645                           
   646 ;; *************** function _next *****************
   647 ;; Defined at:
   648 ;;		line 152 in file "main.c"
   649 ;; Parameters:    Size  Location     Type
   650 ;;  ptr             2   21[COMRAM] PTR unsigned char 
   651 ;;		 -> data(256), 
   652 ;; Auto vars:     Size  Location     Type
   653 ;;		None
   654 ;; Return value:  Size  Location     Type
   655 ;;                  2   21[COMRAM] PTR unsigned char 
   656 ;; Registers used:
   657 ;;		wreg, status,2, status,0
   658 ;; Tracked objects:
   659 ;;		On entry : 0/0
   660 ;;		On exit  : 0/0
   661 ;;		Unchanged: 0/0
   662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   663 ;;      Params:         2       0       0       0       0       0       0
   664 ;;      Locals:         0       0       0       0       0       0       0
   665 ;;      Temps:          0       0       0       0       0       0       0
   666 ;;      Totals:         2       0       0       0       0       0       0
   667 ;;Total ram usage:        2 bytes
   668 ;; Hardware stack levels used:    1
   669 ;; Hardware stack levels required when called:    4
   670 ;; This function calls:
   671 ;;		Nothing
   672 ;; This function is called by:
   673 ;;		_main
   674 ;; This function uses a non-reentrant model
   675 ;;
   676                           
   677                           	psect	text1
   678  0002E2                     __ptext1:
   679                           	opt stack 0
   680  0002E2                     _next:
   681                           	opt stack 26
   682                           
   683                           ;main.c: 153: if(ptr == TAIL)
   684                           
   685                           ;incstack = 0
   686  0002E2  502A               	movf	_TAIL,w,c
   687  0002E4  1816               	xorwf	next@ptr,w,c
   688  0002E6  E109               	bnz	l880
   689  0002E8  502B               	movf	_TAIL+1,w,c
   690  0002EA  1817               	xorwf	next@ptr+1,w,c
   691  0002EC  A4D8               	btfss	status,2,c
   692  0002EE  D005               	goto	l88
   693                           
   694                           ;main.c: 154: return (char*)data;
   695  0002F0  0E00               	movlw	low _data
   696  0002F2  6E16               	movwf	?_next,c
   697  0002F4  0E01               	movlw	high _data
   698  0002F6  6E17               	movwf	?_next+1,c
   699  0002F8  0012               	return	
   700  0002FA                     l88:
   701  0002FA                     l880:
   702                           
   703                           ;main.c: 155: return ptr+1;
   704  0002FA  0E01               	movlw	1
   705  0002FC  2416               	addwf	next@ptr,w,c
   706  0002FE  6E16               	movwf	?_next,c
   707  000300  0E00               	movlw	0
   708  000302  2017               	addwfc	next@ptr+1,w,c
   709  000304  6E17               	movwf	?_next+1,c
   710  000306  0012               	return	
   711  000308                     __end_of_next:
   712                           	opt stack 0
   713                           tblptru	equ	0xFF8
   714                           tblptrh	equ	0xFF7
   715                           tblptrl	equ	0xFF6
   716                           tablat	equ	0xFF5
   717                           postinc0	equ	0xFEE
   718                           postdec1	equ	0xFE5
   719                           fsr1h	equ	0xFE2
   720                           fsr1l	equ	0xFE1
   721                           status	equ	0xFD8
   722                           
   723 ;; *************** function _Myusartinit *****************
   724 ;; Defined at:
   725 ;;		line 190 in file "main.c"
   726 ;; Parameters:    Size  Location     Type
   727 ;;		None
   728 ;; Auto vars:     Size  Location     Type
   729 ;;		None
   730 ;; Return value:  Size  Location     Type
   731 ;;                  1    wreg      void 
   732 ;; Registers used:
   733 ;;		wreg, status,2
   734 ;; Tracked objects:
   735 ;;		On entry : 0/0
   736 ;;		On exit  : 0/0
   737 ;;		Unchanged: 0/0
   738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   739 ;;      Params:         0       0       0       0       0       0       0
   740 ;;      Locals:         0       0       0       0       0       0       0
   741 ;;      Temps:          0       0       0       0       0       0       0
   742 ;;      Totals:         0       0       0       0       0       0       0
   743 ;;Total ram usage:        0 bytes
   744 ;; Hardware stack levels used:    1
   745 ;; Hardware stack levels required when called:    4
   746 ;; This function calls:
   747 ;;		Nothing
   748 ;; This function is called by:
   749 ;;		_main
   750 ;; This function uses a non-reentrant model
   751 ;;
   752                           
   753                           	psect	text2
   754  000378                     __ptext2:
   755                           	opt stack 0
   756  000378                     _Myusartinit:
   757                           	opt stack 26
   758                           
   759                           ;main.c: 193: TRISCbits.TRISC6 = 1;
   760                           
   761                           ;incstack = 0
   762  000378  8C94               	bsf	3988,6,c	;volatile
   763                           
   764                           ;main.c: 194: TRISCbits.TRISC7 = 1;
   765  00037A  8E94               	bsf	3988,7,c	;volatile
   766                           
   767                           ;main.c: 207: BAUDCONbits.BRG16 = 0 ;
   768  00037C  96B8               	bcf	4024,3,c	;volatile
   769                           
   770                           ;main.c: 208: TXSTAbits.BRGH = 1;
   771  00037E  84AC               	bsf	4012,2,c	;volatile
   772                           
   773                           ;main.c: 209: SPBRG = 25;
   774  000380  0E19               	movlw	25
   775  000382  6EAF               	movwf	4015,c	;volatile
   776                           
   777                           ;main.c: 212: TXSTAbits.SYNC = 0;
   778  000384  98AC               	bcf	4012,4,c	;volatile
   779                           
   780                           ;main.c: 213: RCSTAbits.SPEN = 1;
   781  000386  8EAB               	bsf	4011,7,c	;volatile
   782                           
   783                           ;main.c: 218: PIR1bits.TXIF = 1;
   784  000388  889E               	bsf	3998,4,c	;volatile
   785                           
   786                           ;main.c: 219: PIR1bits.RCIF = 0;
   787  00038A  9A9E               	bcf	3998,5,c	;volatile
   788                           
   789                           ;main.c: 220: TXSTAbits.TXEN = 1;
   790  00038C  8AAC               	bsf	4012,5,c	;volatile
   791                           
   792                           ;main.c: 221: RCSTAbits.CREN = 1;
   793  00038E  88AB               	bsf	4011,4,c	;volatile
   794                           
   795                           ;main.c: 223: PIE1bits.TXIE = 0;
   796  000390  989D               	bcf	3997,4,c	;volatile
   797                           
   798                           ;main.c: 224: IPR1bits.TXIP = 1;
   799  000392  889F               	bsf	3999,4,c	;volatile
   800                           
   801                           ;main.c: 225: PIE1bits.RCIE = 1;
   802  000394  8A9D               	bsf	3997,5,c	;volatile
   803                           
   804                           ;main.c: 226: IPR1bits.RCIP = 1;
   805  000396  8A9F               	bsf	3999,5,c	;volatile
   806  000398  0012               	return	
   807  00039A                     __end_of_Myusartinit:
   808                           	opt stack 0
   809                           tblptru	equ	0xFF8
   810                           tblptrh	equ	0xFF7
   811                           tblptrl	equ	0xFF6
   812                           tablat	equ	0xFF5
   813                           postinc0	equ	0xFEE
   814                           postdec1	equ	0xFE5
   815                           fsr1h	equ	0xFE2
   816                           fsr1l	equ	0xFE1
   817                           status	equ	0xFD8
   818                           
   819 ;; *************** function _LED_DISP *****************
   820 ;; Defined at:
   821 ;;		line 126 in file "main.c"
   822 ;; Parameters:    Size  Location     Type
   823 ;;  start           2   23[COMRAM] PTR unsigned char 
   824 ;;		 -> data(256), 
   825 ;; Auto vars:     Size  Location     Type
   826 ;;  dark            2   27[COMRAM] int 
   827 ;;  bright          2   25[COMRAM] int 
   828 ;;  i               2   33[COMRAM] int 
   829 ;;  iter            2   31[COMRAM] PTR unsigned char 
   830 ;;		 -> data(256), 
   831 ;;  delay           2   29[COMRAM] int 
   832 ;; Return value:  Size  Location     Type
   833 ;;                  1    wreg      void 
   834 ;; Registers used:
   835 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   836 ;; Tracked objects:
   837 ;;		On entry : 0/0
   838 ;;		On exit  : 0/0
   839 ;;		Unchanged: 0/0
   840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   841 ;;      Params:         2       0       0       0       0       0       0
   842 ;;      Locals:        10       0       0       0       0       0       0
   843 ;;      Temps:          0       0       0       0       0       0       0
   844 ;;      Totals:        12       0       0       0       0       0       0
   845 ;;Total ram usage:       12 bytes
   846 ;; Hardware stack levels used:    1
   847 ;; Hardware stack levels required when called:    5
   848 ;; This function calls:
   849 ;;		_prev
   850 ;; This function is called by:
   851 ;;		_main
   852 ;; This function uses a non-reentrant model
   853 ;;
   854                           
   855                           	psect	text3
   856  0001B6                     __ptext3:
   857                           	opt stack 0
   858  0001B6                     _LED_DISP:
   859                           	opt stack 25
   860                           
   861                           ;main.c: 127: char* iter = start;
   862                           
   863                           ;incstack = 0
   864  0001B6  C018  F020         	movff	LED_DISP@start,LED_DISP@iter
   865  0001BA  C019  F021         	movff	LED_DISP@start+1,LED_DISP@iter+1
   866                           
   867                           ;main.c: 128: for(int i = 0; i < 122; ++i){
   868  0001BE  0E00               	movlw	0
   869  0001C0  6E23               	movwf	LED_DISP@i+1,c
   870  0001C2  0E00               	movlw	0
   871  0001C4  6E22               	movwf	LED_DISP@i,c
   872  0001C6                     l888:
   873  0001C6  BE23               	btfsc	LED_DISP@i+1,7,c
   874  0001C8  D006               	goto	l67
   875  0001CA  5023               	movf	LED_DISP@i+1,w,c
   876  0001CC  E131               	bnz	l908
   877  0001CE  0E7A               	movlw	122
   878  0001D0  5C22               	subwf	LED_DISP@i,w,c
   879  0001D2  B0D8               	btfsc	status,0,c
   880  0001D4  D02D               	goto	u160
   881  0001D6                     l67:
   882                           
   883                           ;main.c: 129: LATA = *iter;
   884  0001D6  C020  FFD9         	movff	LED_DISP@iter,fsr2l
   885  0001DA  C021  FFDA         	movff	LED_DISP@iter+1,fsr2h
   886  0001DE  50DF               	movf	indf2,w,c
   887  0001E0  6E89               	movwf	3977,c	;volatile
   888                           
   889                           ;main.c: 130: int bright = 60;
   890  0001E2  0E00               	movlw	0
   891  0001E4  6E1B               	movwf	LED_DISP@bright+1,c
   892  0001E6  0E3C               	movlw	60
   893  0001E8  6E1A               	movwf	LED_DISP@bright,c
   894  0001EA                     l896:
   895  0001EA  061A               	decf	LED_DISP@bright,f,c
   896  0001EC  A0D8               	btfss	status,0,c
   897  0001EE  061B               	decf	LED_DISP@bright+1,f,c
   898  0001F0  281A               	incf	LED_DISP@bright,w,c
   899  0001F2  E1FB               	bnz	l896
   900  0001F4  281B               	incf	LED_DISP@bright+1,w,c
   901  0001F6  A4D8               	btfss	status,2,c
   902  0001F8  D7F8               	goto	l70
   903                           
   904                           ;main.c: 132: LATA = 0;
   905  0001FA  0E00               	movlw	0
   906  0001FC  6E89               	movwf	3977,c	;volatile
   907                           
   908                           ;main.c: 133: int dark = 60;
   909  0001FE  0E00               	movlw	0
   910  000200  6E1D               	movwf	LED_DISP@dark+1,c
   911  000202  0E3C               	movlw	60
   912  000204  6E1C               	movwf	LED_DISP@dark,c
   913  000206                     l900:
   914  000206  061C               	decf	LED_DISP@dark,f,c
   915  000208  A0D8               	btfss	status,0,c
   916  00020A  061D               	decf	LED_DISP@dark+1,f,c
   917  00020C  281C               	incf	LED_DISP@dark,w,c
   918  00020E  E1FB               	bnz	l900
   919  000210  281D               	incf	LED_DISP@dark+1,w,c
   920  000212  A4D8               	btfss	status,2,c
   921  000214  D7F8               	goto	l73
   922                           
   923                           ;main.c: 135: iter = prev(iter);
   924  000216  C020  F016         	movff	LED_DISP@iter,prev@ptr
   925  00021A  C021  F017         	movff	LED_DISP@iter+1,prev@ptr+1
   926  00021E  EC84  F001         	call	_prev	;wreg free
   927  000222  C016  F020         	movff	?_prev,LED_DISP@iter
   928  000226  C017  F021         	movff	?_prev+1,LED_DISP@iter+1
   929  00022A  4A22               	infsnz	LED_DISP@i,f,c
   930  00022C  2A23               	incf	LED_DISP@i+1,f,c
   931  00022E  D7CB               	goto	l888
   932  000230                     u160:
   933  000230                     l908:
   934                           
   935                           ;main.c: 136: }
   936                           ;main.c: 137: int delay = 100;
   937  000230  0E00               	movlw	0
   938  000232  6E1F               	movwf	LED_DISP@delay+1,c
   939  000234  0E64               	movlw	100
   940  000236  6E1E               	movwf	LED_DISP@delay,c
   941  000238                     l910:
   942  000238  061E               	decf	LED_DISP@delay,f,c
   943  00023A  A0D8               	btfss	status,0,c
   944  00023C  061F               	decf	LED_DISP@delay+1,f,c
   945  00023E  281E               	incf	LED_DISP@delay,w,c
   946  000240  E1FB               	bnz	l910
   947  000242  281F               	incf	LED_DISP@delay+1,w,c
   948  000244  B4D8               	btfsc	status,2,c
   949  000246  0012               	return	
   950  000248  D7F7               	goto	l76
   951  00024A                     __end_of_LED_DISP:
   952                           	opt stack 0
   953                           tblptru	equ	0xFF8
   954                           tblptrh	equ	0xFF7
   955                           tblptrl	equ	0xFF6
   956                           tablat	equ	0xFF5
   957                           postinc0	equ	0xFEE
   958                           postdec1	equ	0xFE5
   959                           fsr1h	equ	0xFE2
   960                           fsr1l	equ	0xFE1
   961                           indf2	equ	0xFDF
   962                           fsr2h	equ	0xFDA
   963                           fsr2l	equ	0xFD9
   964                           status	equ	0xFD8
   965                           
   966 ;; *************** function _prev *****************
   967 ;; Defined at:
   968 ;;		line 146 in file "main.c"
   969 ;; Parameters:    Size  Location     Type
   970 ;;  ptr             2   21[COMRAM] PTR unsigned char 
   971 ;;		 -> data(256), 
   972 ;; Auto vars:     Size  Location     Type
   973 ;;		None
   974 ;; Return value:  Size  Location     Type
   975 ;;                  2   21[COMRAM] PTR unsigned char 
   976 ;; Registers used:
   977 ;;		wreg, status,2, status,0
   978 ;; Tracked objects:
   979 ;;		On entry : 0/0
   980 ;;		On exit  : 0/0
   981 ;;		Unchanged: 0/0
   982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   983 ;;      Params:         2       0       0       0       0       0       0
   984 ;;      Locals:         0       0       0       0       0       0       0
   985 ;;      Temps:          0       0       0       0       0       0       0
   986 ;;      Totals:         2       0       0       0       0       0       0
   987 ;;Total ram usage:        2 bytes
   988 ;; Hardware stack levels used:    1
   989 ;; Hardware stack levels required when called:    4
   990 ;; This function calls:
   991 ;;		Nothing
   992 ;; This function is called by:
   993 ;;		_LED_DISP
   994 ;; This function uses a non-reentrant model
   995 ;;
   996                           
   997                           	psect	text4
   998  000308                     __ptext4:
   999                           	opt stack 0
  1000  000308                     _prev:
  1001                           	opt stack 25
  1002                           
  1003                           ;main.c: 147: if(ptr == (char*)data)
  1004                           
  1005                           ;incstack = 0
  1006  000308  0E00               	movlw	low _data
  1007  00030A  1816               	xorwf	prev@ptr,w,c
  1008  00030C  E109               	bnz	l866
  1009  00030E  0E01               	movlw	high _data
  1010  000310  1817               	xorwf	prev@ptr+1,w,c
  1011  000312  A4D8               	btfss	status,2,c
  1012  000314  D005               	goto	l84
  1013                           
  1014                           ;main.c: 148: return TAIL;
  1015  000316  C02A  F016         	movff	_TAIL,?_prev
  1016  00031A  C02B  F017         	movff	_TAIL+1,?_prev+1
  1017  00031E  0012               	return	
  1018  000320                     l84:
  1019  000320                     l866:
  1020                           
  1021                           ;main.c: 149: return ptr-1;
  1022  000320  0EFF               	movlw	255
  1023  000322  2416               	addwf	prev@ptr,w,c
  1024  000324  6E16               	movwf	?_prev,c
  1025  000326  0EFF               	movlw	255
  1026  000328  2017               	addwfc	prev@ptr+1,w,c
  1027  00032A  6E17               	movwf	?_prev+1,c
  1028  00032C  0012               	return	
  1029  00032E                     __end_of_prev:
  1030                           	opt stack 0
  1031                           tblptru	equ	0xFF8
  1032                           tblptrh	equ	0xFF7
  1033                           tblptrl	equ	0xFF6
  1034                           tablat	equ	0xFF5
  1035                           postinc0	equ	0xFEE
  1036                           postdec1	equ	0xFE5
  1037                           fsr1h	equ	0xFE2
  1038                           fsr1l	equ	0xFE1
  1039                           indf2	equ	0xFDF
  1040                           fsr2h	equ	0xFDA
  1041                           fsr2l	equ	0xFD9
  1042                           status	equ	0xFD8
  1043                           
  1044 ;; *************** function _ISR_Init *****************
  1045 ;; Defined at:
  1046 ;;		line 167 in file "main.c"
  1047 ;; Parameters:    Size  Location     Type
  1048 ;;		None
  1049 ;; Auto vars:     Size  Location     Type
  1050 ;;		None
  1051 ;; Return value:  Size  Location     Type
  1052 ;;                  1    wreg      void 
  1053 ;; Registers used:
  1054 ;;		None
  1055 ;; Tracked objects:
  1056 ;;		On entry : 0/0
  1057 ;;		On exit  : 0/0
  1058 ;;		Unchanged: 0/0
  1059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1060 ;;      Params:         0       0       0       0       0       0       0
  1061 ;;      Locals:         0       0       0       0       0       0       0
  1062 ;;      Temps:          0       0       0       0       0       0       0
  1063 ;;      Totals:         0       0       0       0       0       0       0
  1064 ;;Total ram usage:        0 bytes
  1065 ;; Hardware stack levels used:    1
  1066 ;; Hardware stack levels required when called:    4
  1067 ;; This function calls:
  1068 ;;		Nothing
  1069 ;; This function is called by:
  1070 ;;		_main
  1071 ;; This function uses a non-reentrant model
  1072 ;;
  1073                           
  1074                           	psect	text5
  1075  0003A6                     __ptext5:
  1076                           	opt stack 0
  1077  0003A6                     _ISR_Init:
  1078                           	opt stack 26
  1079                           
  1080                           ;main.c: 170: RCONbits.IPEN = 1;
  1081                           
  1082                           ;incstack = 0
  1083  0003A6  8ED0               	bsf	4048,7,c	;volatile
  1084                           
  1085                           ;main.c: 171: INTCONbits.GIEH = 1;
  1086  0003A8  8EF2               	bsf	intcon,7,c	;volatile
  1087                           
  1088                           ;main.c: 172: INTCONbits.GIEL = 1;
  1089  0003AA  8CF2               	bsf	intcon,6,c	;volatile
  1090                           
  1091                           ;main.c: 174: return ;
  1092  0003AC  0012               	return		;funcret
  1093  0003AE                     __end_of_ISR_Init:
  1094                           	opt stack 0
  1095                           tblptru	equ	0xFF8
  1096                           tblptrh	equ	0xFF7
  1097                           tblptrl	equ	0xFF6
  1098                           tablat	equ	0xFF5
  1099                           intcon	equ	0xFF2
  1100                           postinc0	equ	0xFEE
  1101                           postdec1	equ	0xFE5
  1102                           fsr1h	equ	0xFE2
  1103                           fsr1l	equ	0xFE1
  1104                           indf2	equ	0xFDF
  1105                           fsr2h	equ	0xFDA
  1106                           fsr2l	equ	0xFD9
  1107                           status	equ	0xFD8
  1108                           
  1109 ;; *************** function _Hi_ISR *****************
  1110 ;; Defined at:
  1111 ;;		line 231 in file "main.c"
  1112 ;; Parameters:    Size  Location     Type
  1113 ;;		None
  1114 ;; Auto vars:     Size  Location     Type
  1115 ;;		None
  1116 ;; Return value:  Size  Location     Type
  1117 ;;                  1    wreg      void 
  1118 ;; Registers used:
  1119 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1120 ;; Tracked objects:
  1121 ;;		On entry : 0/0
  1122 ;;		On exit  : 0/0
  1123 ;;		Unchanged: 0/0
  1124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1125 ;;      Params:         0       0       0       0       0       0       0
  1126 ;;      Locals:         0       0       0       0       0       0       0
  1127 ;;      Temps:         18       0       0       0       0       0       0
  1128 ;;      Totals:        18       0       0       0       0       0       0
  1129 ;;Total ram usage:       18 bytes
  1130 ;; Hardware stack levels used:    1
  1131 ;; Hardware stack levels required when called:    3
  1132 ;; This function calls:
  1133 ;;		_MyusartRead
  1134 ;;		_Myusartwrite
  1135 ;; This function is called by:
  1136 ;;		Interrupt level 2
  1137 ;; This function uses a non-reentrant model
  1138 ;;
  1139                           
  1140                           	psect	intcode
  1141  000008                     __pintcode:
  1142                           	opt stack 0
  1143  000008                     _Hi_ISR:
  1144                           	opt stack 25
  1145                           
  1146                           ;incstack = 0
  1147  000008  822E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1148  00000A  ED89  F000         	call	int_func,f	;refresh shadow registers
  1149                           tblptru	equ	0xFF8
  1150                           tblptrh	equ	0xFF7
  1151                           tblptrl	equ	0xFF6
  1152                           tablat	equ	0xFF5
  1153                           intcon	equ	0xFF2
  1154                           postinc0	equ	0xFEE
  1155                           postdec1	equ	0xFE5
  1156                           fsr1h	equ	0xFE2
  1157                           fsr1l	equ	0xFE1
  1158                           indf2	equ	0xFDF
  1159                           fsr2h	equ	0xFDA
  1160                           fsr2l	equ	0xFD9
  1161                           status	equ	0xFD8
  1162                           
  1163                           	psect	intcode_body
  1164  000112                     __pintcode_body:
  1165                           	opt stack 25
  1166  000112                     int_func:
  1167                           	opt stack 25
  1168  000112  0006               	pop		; remove dummy address from shadow register refresh
  1169  000114  CFFA F004          	movff	pclath,??_Hi_ISR
  1170  000118  CFFB F005          	movff	pclatu,??_Hi_ISR+1
  1171  00011C  CFE9 F006          	movff	fsr0l,??_Hi_ISR+2
  1172  000120  CFEA F007          	movff	fsr0h,??_Hi_ISR+3
  1173  000124  CFE1 F008          	movff	fsr1l,??_Hi_ISR+4
  1174  000128  CFE2 F009          	movff	fsr1h,??_Hi_ISR+5
  1175  00012C  CFD9 F00A          	movff	fsr2l,??_Hi_ISR+6
  1176  000130  CFDA F00B          	movff	fsr2h,??_Hi_ISR+7
  1177  000134  CFF3 F00C          	movff	prodl,??_Hi_ISR+8
  1178  000138  CFF4 F00D          	movff	prodh,??_Hi_ISR+9
  1179  00013C  CFF6 F00E          	movff	tblptrl,??_Hi_ISR+10
  1180  000140  CFF7 F00F          	movff	tblptrh,??_Hi_ISR+11
  1181  000144  CFF8 F010          	movff	tblptru,??_Hi_ISR+12
  1182  000148  CFF5 F011          	movff	tablat,??_Hi_ISR+13
  1183  00014C  C02E  F012         	movff	btemp,??_Hi_ISR+14
  1184  000150  C02F  F013         	movff	btemp+1,??_Hi_ISR+15
  1185  000154  C030  F014         	movff	btemp+2,??_Hi_ISR+16
  1186  000158  C031  F015         	movff	btemp+3,??_Hi_ISR+17
  1187                           
  1188                           ;main.c: 233: if(RCIF)
  1189  00015C  AA9E               	btfss	3998,5,c	;volatile
  1190  00015E  D005               	goto	i2l109
  1191                           
  1192                           ;main.c: 234: {
  1193                           ;main.c: 235: MyusartRead();
  1194  000160  ECCD  F001         	call	_MyusartRead	;wreg free
  1195                           
  1196                           ;main.c: 236: Myusartwrite(global_char);
  1197  000164  5028               	movf	_global_char,w,c
  1198  000166  ECD7  F001         	call	_Myusartwrite
  1199  00016A                     i2l109:
  1200                           
  1201                           ;main.c: 237: }
  1202                           ;main.c: 238: return ;
  1203  00016A  C015  F031         	movff	??_Hi_ISR+17,btemp+3
  1204  00016E  C014  F030         	movff	??_Hi_ISR+16,btemp+2
  1205  000172  C013  F02F         	movff	??_Hi_ISR+15,btemp+1
  1206  000176  C012  F02E         	movff	??_Hi_ISR+14,btemp
  1207  00017A  C011  FFF5         	movff	??_Hi_ISR+13,tablat
  1208  00017E  C010  FFF8         	movff	??_Hi_ISR+12,tblptru
  1209  000182  C00F  FFF7         	movff	??_Hi_ISR+11,tblptrh
  1210  000186  C00E  FFF6         	movff	??_Hi_ISR+10,tblptrl
  1211  00018A  C00D  FFF4         	movff	??_Hi_ISR+9,prodh
  1212  00018E  C00C  FFF3         	movff	??_Hi_ISR+8,prodl
  1213  000192  C00B  FFDA         	movff	??_Hi_ISR+7,fsr2h
  1214  000196  C00A  FFD9         	movff	??_Hi_ISR+6,fsr2l
  1215  00019A  C009  FFE2         	movff	??_Hi_ISR+5,fsr1h
  1216  00019E  C008  FFE1         	movff	??_Hi_ISR+4,fsr1l
  1217  0001A2  C007  FFEA         	movff	??_Hi_ISR+3,fsr0h
  1218  0001A6  C006  FFE9         	movff	??_Hi_ISR+2,fsr0l
  1219  0001AA  C005  FFFB         	movff	??_Hi_ISR+1,pclatu
  1220  0001AE  C004  FFFA         	movff	??_Hi_ISR,pclath
  1221  0001B2  922E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1222  0001B4  0011               	retfie		f
  1223  0001B6                     __end_of_Hi_ISR:
  1224                           	opt stack 0
  1225                           pclatu	equ	0xFFB
  1226                           pclath	equ	0xFFA
  1227                           tblptru	equ	0xFF8
  1228                           tblptrh	equ	0xFF7
  1229                           tblptrl	equ	0xFF6
  1230                           tablat	equ	0xFF5
  1231                           prodh	equ	0xFF4
  1232                           prodl	equ	0xFF3
  1233                           intcon	equ	0xFF2
  1234                           postinc0	equ	0xFEE
  1235                           fsr0h	equ	0xFEA
  1236                           fsr0l	equ	0xFE9
  1237                           postdec1	equ	0xFE5
  1238                           fsr1h	equ	0xFE2
  1239                           fsr1l	equ	0xFE1
  1240                           indf2	equ	0xFDF
  1241                           fsr2h	equ	0xFDA
  1242                           fsr2l	equ	0xFD9
  1243                           status	equ	0xFD8
  1244                           
  1245 ;; *************** function _Myusartwrite *****************
  1246 ;; Defined at:
  1247 ;;		line 184 in file "main.c"
  1248 ;; Parameters:    Size  Location     Type
  1249 ;;  a               1    wreg     unsigned char 
  1250 ;; Auto vars:     Size  Location     Type
  1251 ;;  a               1    0[COMRAM] unsigned char 
  1252 ;; Return value:  Size  Location     Type
  1253 ;;                  1    wreg      void 
  1254 ;; Registers used:
  1255 ;;		wreg
  1256 ;; Tracked objects:
  1257 ;;		On entry : 0/0
  1258 ;;		On exit  : 0/0
  1259 ;;		Unchanged: 0/0
  1260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1261 ;;      Params:         0       0       0       0       0       0       0
  1262 ;;      Locals:         1       0       0       0       0       0       0
  1263 ;;      Temps:          0       0       0       0       0       0       0
  1264 ;;      Totals:         1       0       0       0       0       0       0
  1265 ;;Total ram usage:        1 bytes
  1266 ;; Hardware stack levels used:    1
  1267 ;; This function calls:
  1268 ;;		Nothing
  1269 ;; This function is called by:
  1270 ;;		_Hi_ISR
  1271 ;; This function uses a non-reentrant model
  1272 ;;
  1273                           
  1274                           	psect	text7
  1275  0003AE                     __ptext7:
  1276                           	opt stack 0
  1277  0003AE                     _Myusartwrite:
  1278                           	opt stack 27
  1279                           
  1280                           ;incstack = 0
  1281                           ;Myusartwrite@a stored from wreg
  1282  0003AE  6E01               	movwf	Myusartwrite@a,c
  1283                           
  1284                           ;main.c: 187: TXREG = a;
  1285  0003B0  C001  FFAD         	movff	Myusartwrite@a,4013	;volatile
  1286  0003B4  0012               	return	
  1287  0003B6                     __end_of_Myusartwrite:
  1288                           	opt stack 0
  1289                           pclatu	equ	0xFFB
  1290                           pclath	equ	0xFFA
  1291                           tblptru	equ	0xFF8
  1292                           tblptrh	equ	0xFF7
  1293                           tblptrl	equ	0xFF6
  1294                           tablat	equ	0xFF5
  1295                           prodh	equ	0xFF4
  1296                           prodl	equ	0xFF3
  1297                           intcon	equ	0xFF2
  1298                           postinc0	equ	0xFEE
  1299                           fsr0h	equ	0xFEA
  1300                           fsr0l	equ	0xFE9
  1301                           postdec1	equ	0xFE5
  1302                           fsr1h	equ	0xFE2
  1303                           fsr1l	equ	0xFE1
  1304                           indf2	equ	0xFDF
  1305                           fsr2h	equ	0xFDA
  1306                           fsr2l	equ	0xFD9
  1307                           status	equ	0xFD8
  1308                           
  1309 ;; *************** function _MyusartRead *****************
  1310 ;; Defined at:
  1311 ;;		line 176 in file "main.c"
  1312 ;; Parameters:    Size  Location     Type
  1313 ;;		None
  1314 ;; Auto vars:     Size  Location     Type
  1315 ;;		None
  1316 ;; Return value:  Size  Location     Type
  1317 ;;                  1    wreg      void 
  1318 ;; Registers used:
  1319 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1320 ;; Tracked objects:
  1321 ;;		On entry : 0/0
  1322 ;;		On exit  : 0/0
  1323 ;;		Unchanged: 0/0
  1324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1325 ;;      Params:         0       0       0       0       0       0       0
  1326 ;;      Locals:         0       0       0       0       0       0       0
  1327 ;;      Temps:          0       0       0       0       0       0       0
  1328 ;;      Totals:         0       0       0       0       0       0       0
  1329 ;;Total ram usage:        0 bytes
  1330 ;; Hardware stack levels used:    1
  1331 ;; Hardware stack levels required when called:    2
  1332 ;; This function calls:
  1333 ;;		_add_word
  1334 ;; This function is called by:
  1335 ;;		_Hi_ISR
  1336 ;; This function uses a non-reentrant model
  1337 ;;
  1338                           
  1339                           	psect	text8
  1340  00039A                     __ptext8:
  1341                           	opt stack 0
  1342  00039A                     _MyusartRead:
  1343                           	opt stack 25
  1344                           
  1345                           ;main.c: 179: global_char = RCREG;
  1346                           
  1347                           ;incstack = 0
  1348  00039A  CFAE F028          	movff	4014,_global_char	;volatile
  1349                           
  1350                           ;main.c: 180: add_word(global_char);
  1351  00039E  5028               	movf	_global_char,w,c
  1352  0003A0  ECAA  F001         	call	_add_word
  1353  0003A4  0012               	return	
  1354  0003A6                     __end_of_MyusartRead:
  1355                           	opt stack 0
  1356                           pclatu	equ	0xFFB
  1357                           pclath	equ	0xFFA
  1358                           tblptru	equ	0xFF8
  1359                           tblptrh	equ	0xFF7
  1360                           tblptrl	equ	0xFF6
  1361                           tablat	equ	0xFF5
  1362                           prodh	equ	0xFF4
  1363                           prodl	equ	0xFF3
  1364                           intcon	equ	0xFF2
  1365                           postinc0	equ	0xFEE
  1366                           fsr0h	equ	0xFEA
  1367                           fsr0l	equ	0xFE9
  1368                           postdec1	equ	0xFE5
  1369                           fsr1h	equ	0xFE2
  1370                           fsr1l	equ	0xFE1
  1371                           indf2	equ	0xFDF
  1372                           fsr2h	equ	0xFDA
  1373                           fsr2l	equ	0xFD9
  1374                           status	equ	0xFD8
  1375                           
  1376 ;; *************** function _add_word *****************
  1377 ;; Defined at:
  1378 ;;		line 141 in file "main.c"
  1379 ;; Parameters:    Size  Location     Type
  1380 ;;  c               1    wreg     unsigned char 
  1381 ;; Auto vars:     Size  Location     Type
  1382 ;;  c               1    2[COMRAM] unsigned char 
  1383 ;; Return value:  Size  Location     Type
  1384 ;;                  1    wreg      void 
  1385 ;; Registers used:
  1386 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1387 ;; Tracked objects:
  1388 ;;		On entry : 0/0
  1389 ;;		On exit  : 0/0
  1390 ;;		Unchanged: 0/0
  1391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1392 ;;      Params:         0       0       0       0       0       0       0
  1393 ;;      Locals:         1       0       0       0       0       0       0
  1394 ;;      Temps:          0       0       0       0       0       0       0
  1395 ;;      Totals:         1       0       0       0       0       0       0
  1396 ;;Total ram usage:        1 bytes
  1397 ;; Hardware stack levels used:    1
  1398 ;; Hardware stack levels required when called:    1
  1399 ;; This function calls:
  1400 ;;		i2_next
  1401 ;; This function is called by:
  1402 ;;		_MyusartRead
  1403 ;;		_init_word
  1404 ;; This function uses a non-reentrant model
  1405 ;;
  1406                           
  1407                           	psect	text9
  1408  000354                     __ptext9:
  1409                           	opt stack 0
  1410  000354                     _add_word:
  1411                           	opt stack 25
  1412                           
  1413                           ;incstack = 0
  1414                           ;add_word@c stored from wreg
  1415  000354  6E03               	movwf	add_word@c,c
  1416                           
  1417                           ;main.c: 142: *now = c;
  1418  000356  C02C  FFD9         	movff	_now,fsr2l
  1419  00035A  C02D  FFDA         	movff	_now+1,fsr2h
  1420  00035E  C003  FFDF         	movff	add_word@c,indf2
  1421                           
  1422                           ;main.c: 143: now = next(now);
  1423  000362  C02C  F001         	movff	_now,i2next@ptr
  1424  000366  C02D  F002         	movff	_now+1,i2next@ptr+1
  1425  00036A  EC97  F001         	call	i2_next	;wreg free
  1426  00036E  C001  F02C         	movff	?i2_next,_now
  1427  000372  C002  F02D         	movff	?i2_next+1,_now+1
  1428  000376  0012               	return		;funcret
  1429  000378                     __end_of_add_word:
  1430                           	opt stack 0
  1431                           pclatu	equ	0xFFB
  1432                           pclath	equ	0xFFA
  1433                           tblptru	equ	0xFF8
  1434                           tblptrh	equ	0xFF7
  1435                           tblptrl	equ	0xFF6
  1436                           tablat	equ	0xFF5
  1437                           prodh	equ	0xFF4
  1438                           prodl	equ	0xFF3
  1439                           intcon	equ	0xFF2
  1440                           postinc0	equ	0xFEE
  1441                           fsr0h	equ	0xFEA
  1442                           fsr0l	equ	0xFE9
  1443                           postdec1	equ	0xFE5
  1444                           fsr1h	equ	0xFE2
  1445                           fsr1l	equ	0xFE1
  1446                           indf2	equ	0xFDF
  1447                           fsr2h	equ	0xFDA
  1448                           fsr2l	equ	0xFD9
  1449                           status	equ	0xFD8
  1450                           
  1451 ;; *************** function i2_next *****************
  1452 ;; Defined at:
  1453 ;;		line 152 in file "main.c"
  1454 ;; Parameters:    Size  Location     Type
  1455 ;;  ptr             2    0[COMRAM] PTR unsigned char 
  1456 ;;		 -> data(256), 
  1457 ;; Auto vars:     Size  Location     Type
  1458 ;;		None
  1459 ;; Return value:  Size  Location     Type
  1460 ;;                  2    0[COMRAM] PTR unsigned char 
  1461 ;; Registers used:
  1462 ;;		wreg, status,2, status,0
  1463 ;; Tracked objects:
  1464 ;;		On entry : 0/0
  1465 ;;		On exit  : 0/0
  1466 ;;		Unchanged: 0/0
  1467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1468 ;;      Params:         2       0       0       0       0       0       0
  1469 ;;      Locals:         0       0       0       0       0       0       0
  1470 ;;      Temps:          0       0       0       0       0       0       0
  1471 ;;      Totals:         2       0       0       0       0       0       0
  1472 ;;Total ram usage:        2 bytes
  1473 ;; Hardware stack levels used:    1
  1474 ;; This function calls:
  1475 ;;		Nothing
  1476 ;; This function is called by:
  1477 ;;		_add_word
  1478 ;; This function uses a non-reentrant model
  1479 ;;
  1480                           
  1481                           	psect	text10
  1482  00032E                     __ptext10:
  1483                           	opt stack 0
  1484  00032E                     i2_next:
  1485                           	opt stack 25
  1486                           
  1487                           ;main.c: 153: if(ptr == TAIL)
  1488                           
  1489                           ;incstack = 0
  1490  00032E  502A               	movf	_TAIL,w,c
  1491  000330  1801               	xorwf	i2next@ptr,w,c
  1492  000332  E109               	bnz	i2l856
  1493  000334  502B               	movf	_TAIL+1,w,c
  1494  000336  1802               	xorwf	i2next@ptr+1,w,c
  1495  000338  A4D8               	btfss	status,2,c
  1496  00033A  D005               	goto	i2l88
  1497                           
  1498                           ;main.c: 154: return (char*)data;
  1499  00033C  0E00               	movlw	low _data
  1500  00033E  6E01               	movwf	?i2_next,c
  1501  000340  0E01               	movlw	high _data
  1502  000342  6E02               	movwf	?i2_next+1,c
  1503  000344  0012               	return	
  1504  000346                     i2l88:
  1505  000346                     i2l856:
  1506                           
  1507                           ;main.c: 155: return ptr+1;
  1508  000346  0E01               	movlw	1
  1509  000348  2401               	addwf	i2next@ptr,w,c
  1510  00034A  6E01               	movwf	?i2_next,c
  1511  00034C  0E00               	movlw	0
  1512  00034E  2002               	addwfc	i2next@ptr+1,w,c
  1513  000350  6E02               	movwf	?i2_next+1,c
  1514  000352  0012               	return	
  1515  000354                     __end_ofi2_next:
  1516                           	opt stack 0
  1517  0000                     pclatu	equ	0xFFB
  1518                           pclath	equ	0xFFA
  1519                           tblptru	equ	0xFF8
  1520                           tblptrh	equ	0xFF7
  1521                           tblptrl	equ	0xFF6
  1522                           tablat	equ	0xFF5
  1523                           prodh	equ	0xFF4
  1524                           prodl	equ	0xFF3
  1525                           intcon	equ	0xFF2
  1526                           postinc0	equ	0xFEE
  1527                           fsr0h	equ	0xFEA
  1528                           fsr0l	equ	0xFE9
  1529                           postdec1	equ	0xFE5
  1530                           fsr1h	equ	0xFE2
  1531                           fsr1l	equ	0xFE1
  1532                           indf2	equ	0xFDF
  1533                           fsr2h	equ	0xFDA
  1534                           fsr2l	equ	0xFD9
  1535                           status	equ	0xFD8
  1536                           pclatu	equ	0xFFB
  1537                           pclath	equ	0xFFA
  1538                           tblptru	equ	0xFF8
  1539                           tblptrh	equ	0xFF7
  1540                           tblptrl	equ	0xFF6
  1541                           tablat	equ	0xFF5
  1542                           prodh	equ	0xFF4
  1543                           prodl	equ	0xFF3
  1544                           intcon	equ	0xFF2
  1545                           postinc0	equ	0xFEE
  1546                           fsr0h	equ	0xFEA
  1547                           fsr0l	equ	0xFE9
  1548                           postdec1	equ	0xFE5
  1549                           fsr1h	equ	0xFE2
  1550                           fsr1l	equ	0xFE1
  1551                           indf2	equ	0xFDF
  1552                           fsr2h	equ	0xFDA
  1553                           fsr2l	equ	0xFD9
  1554                           status	equ	0xFD8
  1555                           
  1556                           	psect	rparam
  1557  0000                     pclatu	equ	0xFFB
  1558                           pclath	equ	0xFFA
  1559                           tblptru	equ	0xFF8
  1560                           tblptrh	equ	0xFF7
  1561                           tblptrl	equ	0xFF6
  1562                           tablat	equ	0xFF5
  1563                           prodh	equ	0xFF4
  1564                           prodl	equ	0xFF3
  1565                           intcon	equ	0xFF2
  1566                           postinc0	equ	0xFEE
  1567                           fsr0h	equ	0xFEA
  1568                           fsr0l	equ	0xFE9
  1569                           postdec1	equ	0xFE5
  1570                           fsr1h	equ	0xFE2
  1571                           fsr1l	equ	0xFE1
  1572                           indf2	equ	0xFDF
  1573                           fsr2h	equ	0xFDA
  1574                           fsr2l	equ	0xFD9
  1575                           status	equ	0xFD8
  1576                           
  1577                           	psect	temp
  1578  00002E                     btemp:
  1579                           	opt stack 0
  1580  00002E                     	ds	1
  1581  0000                     int$flags	set	btemp
  1582  0000                     wtemp6	set	btemp+1
  1583                           pclatu	equ	0xFFB
  1584                           pclath	equ	0xFFA
  1585                           tblptru	equ	0xFF8
  1586                           tblptrh	equ	0xFF7
  1587                           tblptrl	equ	0xFF6
  1588                           tablat	equ	0xFF5
  1589                           prodh	equ	0xFF4
  1590                           prodl	equ	0xFF3
  1591                           intcon	equ	0xFF2
  1592                           postinc0	equ	0xFEE
  1593                           fsr0h	equ	0xFEA
  1594                           fsr0l	equ	0xFE9
  1595                           postdec1	equ	0xFE5
  1596                           fsr1h	equ	0xFE2
  1597                           fsr1l	equ	0xFE1
  1598                           indf2	equ	0xFDF
  1599                           fsr2h	equ	0xFDA
  1600                           fsr2l	equ	0xFD9
  1601                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        260
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     37      45
    BANK0           128      0       0
    BANK1           256      0     256
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    next@ptr	PTR unsigned char  size(2) Largest target is 256
		 -> data(BANK1[256]), 

    prev@ptr	PTR unsigned char  size(2) Largest target is 256
		 -> data(BANK1[256]), 

    sp__prev	PTR unsigned char  size(2) Largest target is 256
		 -> data(BANK1[256]), 

    LED_DISP@start	PTR unsigned char  size(2) Largest target is 256
		 -> data(BANK1[256]), 

    LED_DISP@iter	PTR unsigned char  size(2) Largest target is 256
		 -> data(BANK1[256]), 

    sp__next	PTR unsigned char  size(2) Largest target is 256
		 -> data(BANK1[256]), 

    main@start	PTR unsigned char  size(2) Largest target is 256
		 -> data(BANK1[256]), 

    TAIL	PTR unsigned char  size(2) Largest target is 256
		 -> data(BANK1[256]), 

    now	PTR unsigned char  size(2) Largest target is 256
		 -> data(BANK1[256]), 


Critical Paths under _main in COMRAM

    _main->_LED_DISP
    _LED_DISP->_prev

Critical Paths under _Hi_ISR in COMRAM

    _MyusartRead->_add_word
    _add_word->i2_next

Critical Paths under _main in BANK0

    None.

Critical Paths under _Hi_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Hi_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Hi_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Hi_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Hi_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Hi_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     595
                                             35 COMRAM     2     2      0
                           _ISR_Init
                           _LED_DISP
                        _Myusartinit
                               _next
 ---------------------------------------------------------------------------------
 (1) _next                                                 2     0      2     170
                                             21 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Myusartinit                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_DISP                                            12    10      2     379
                                             23 COMRAM    12    10      2
                               _prev
 ---------------------------------------------------------------------------------
 (2) _prev                                                 2     0      2     120
                                             21 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ISR_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Hi_ISR                                              18    18      0     107
                                              3 COMRAM    18    18      0
                        _MyusartRead
                       _Myusartwrite
 ---------------------------------------------------------------------------------
 (4) _Myusartwrite                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _MyusartRead                                          0     0      0      92
                           _add_word
 ---------------------------------------------------------------------------------
 (5) _add_word                                             1     1      0      92
                                              2 COMRAM     1     1      0
                             i2_next
 ---------------------------------------------------------------------------------
 (6) i2_next                                               2     0      2      70
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ISR_Init
   _LED_DISP
     _prev
   _Myusartinit
   _next

 _Hi_ISR (ROOT)
   _MyusartRead
     _add_word
       i2_next
   _Myusartwrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0     100       7      100.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     25      2D       1       35.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     12D      15        0.0%
DATA                 0      0     12D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Wed Dec 20 22:07:19 2017

                     l61 02C0                       l70 01EA                       l73 0206  
                     l67 01D6                       l84 0320                       l76 0238  
                     l88 02FA             _Myusartwrite 03AE              __CFG_BORV$3 000000  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000                      l900 0206                      l910 0238  
                    l908 0230                      l880 02FA                      l866 0320  
                    l896 01EA                      l888 01C6             __CFG_CPB$OFF 000000  
                    u160 0230             __CFG_CPD$OFF 000000                      _now 002C  
           __CFG_IESO$ON 000000             __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000  
                   _LATA 000F89                     _RCIF 007CF5                     _TAIL 002A  
                   i2l88 0346             __CFG_WDTPS$1 000000                     _data 0100  
                   _main 02A0             LED_DISP@dark 001C                     _next 02E2  
                   _temp 0029                     _prev 0308                     fsr0h 000FEA  
                   fsr1h 000FE2                     fsr2h 000FDA                     fsr0l 000FE9  
                   indf2 000FDF                     fsr1l 000FE1                     fsr2l 000FD9  
           LED_DISP@iter 0020                     btemp 002E                     prodh 000FF4  
                   prodl 000FF3                     start 000E            __CFG_MCLRE$ON 000000  
           ___param_bank 000000         __end_of_LED_DISP 024A                    ?_main 0001  
                  ?_next 0016                    ?_prev 0016                    i2l109 016A  
                  i2l856 0346                    _RCREG 000FAE                    _SPBRG 000FAF  
                  _TRISA 000F92                    _TRISD 000F95                    _TXREG 000FAD  
          __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
       __end_of_ISR_Init 03AE            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000  
          LED_DISP@delay 001E            LED_DISP@start 0018                    pclath 000FFA  
                  tablat 000FF5                    status 000FD8                    wtemp6 002F  
         __CFG_PBADEN$ON 000000          __initialization 024A             __end_of_main 02E2  
           __end_of_next 0308             __end_of_prev 032E                   ??_main 0024  
                 ??_next 0018                   ??_prev 0018            __activetblptr 000000  
       __end_of_add_word 0378                   _Hi_ISR 0008                   i2_next 032E  
         __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000           LED_DISP@bright 001A  
           __pdataCOMRAM 002A                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8                ?_LED_DISP 0018               __accesstop 0080  
__end_of__initialization 0296                LED_DISP@i 0022            ___rparam_used 000001  
         __pcstackCOMRAM 0001                ?_ISR_Init 0001             __pidataBANK1 0012  
          ??_MyusartRead 0004            ??_Myusartinit 0016               ??_LED_DISP 001A  
          Myusartwrite@a 0001                  ?_Hi_ISR 0001                  ?i2_next 0001  
             ??_ISR_Init 0016                ?_add_word 0001      __end_of_MyusartRead 03A6  
    __end_of_Myusartinit 039A          __size_of_Hi_ISR 01AE          __size_ofi2_next 0026  
                __Hparam 0000                  __Lparam 0000                  __pcinit 024A  
                __ramtop 0600                  __ptext0 02A0                  __ptext1 02E2  
                __ptext2 0378                  __ptext3 01B6                  __ptext4 0308  
                __ptext5 03A6                  __ptext7 03AE                  __ptext8 039A  
                __ptext9 0354               ??_add_word 0003                  _stringC 0026  
         __pintcode_body 0112     end_of_initialization 0296                  int_func 0112  
                next@ptr 0016                  prev@ptr 0016                _RCSTAbits 000FAB  
                postdec1 000FE5                  postinc0 000FEE                _TRISCbits 000F94  
            _MyusartRead 039A              _Myusartinit 0378                _TXSTAbits 000FAC  
      __size_of_LED_DISP 0094           __end_of_Hi_ISR 01B6           __end_ofi2_next 0354  
          ?_Myusartwrite 0001        __size_of_ISR_Init 0008              _BAUDCONbits 000FB8  
          __pidataCOMRAM 03B6                i2next@ptr 0001      start_initialization 024A  
       __CFG_OSC$INTIO67 000000                 ??_Hi_ISR 0004                 ??i2_next 0003  
         ??_Myusartwrite 0001              __pdataBANK1 0100         __CFG_LPT1OSC$OFF 000000  
            __pbssCOMRAM 0026        __size_of_add_word 0024        __CFG_CCP2MX$PORTC 000000  
              __pintcode 0008                add_word@c 0003                 _LED_DISP 01B6  
               _IPR1bits 000F9F                 _PIE1bits 000F9D                 _PIR1bits 000F9E  
               _RCONbits 000FD0                 _ISR_Init 03A6              _global_char 0028  
              main@start 0024             ?_MyusartRead 0001             ?_Myusartinit 0001  
              copy_data0 025E                copy_data1 0282     __end_of_Myusartwrite 03B6  
               __Hrparam 0000                 __Lrparam 0000       __CFG_BOREN$SBORDIS 000000  
               _add_word 0354                 __ptext10 032E            __size_of_main 0042  
          __size_of_next 0026            __size_of_prev 0026                 int$flags 002E  
             _INTCONbits 000FF2                 intlevel2 0000               _OSCCONbits 000FD3  
  __size_of_Myusartwrite 0008     __size_of_MyusartRead 000C     __size_of_Myusartinit 0022  
